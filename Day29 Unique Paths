class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        if not m or not n:
            return 0
#         ans = []
#         def dfs(x, y, s):
#             if x == n-1 and y == m-1:
#                 ans.append(s)
#                 return 
#             if x <= n-1:
#                 dfs(x+1, y, s+1)
#             if  y <= m-1:
#                 dfs(x, y+1, s+1)

#         dfs(0, 0, 0)
#         return len(ans)
            
        dp = [[0 for _ in range(m)] for _ in range(n)]
        for x in range(n):
            for y in range(m):
                if x == 0 or y == 0:
                    dp[x][y] = 1
                else:
                    dp[x][y] = dp[x-1][y] + dp[x][y-1]
    
        return dp[n-1][m-1]

